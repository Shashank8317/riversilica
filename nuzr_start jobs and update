const mysql = require('mysql');
const qs = require('qs');
const axios = require('axios');

const pool = mysql.createPool({
  connectionLimit : 10,
   host     : 'skycode9.riversilica.com',
  user     : 'pixfix_local',
  password : 'Pixfix@123',
  database : 'pixfix_local'
});
;

// var job_name;
// var job_url;
exports.handler =  function(event, context, callback) {
  var jsonData = JSON.parse(JSON.stringify(event).replace("body-json","body"));
  console.log(jsonData.body);
  var postParams = jsonData.body ? jsonData.body.split("&") : [];


  var title="latha";
  var username="suadmin";
  var location="banglored";
  var tag="tag";
  

  postParams[0] ? check(postParams[0]) : "";
  postParams[1] ? check(postParams[1]) : "";
  postParams[2] ? check(postParams[2]) : "";
  postParams[3] ? check(postParams[3]) : "";
  
  
    function check(data)
  {
    let response = data.split("=");
    
    if(response["0"] == "title")
    {
      title = decodeURI(response["1"].replace(/\+/g,' '));
    }
    else
    if(response["0"] == "username")
    {
      username  =  decodeURI(response["1"].replace(/\+/g,' '));
    }
    else
    if(response["0"] == "location")
    {
      location =  decodeURI(response["1"].replace(/\+/g,' '));
    }
    else
    if(response["0"] == "tag")
    {
      tag = decodeURI(response["1"].replace(/\+/g,' '));
    } 
  
  }

  
  let errorMsg = {};
  let status = true;
  if(title == "")
  {
    errorMsg =  "title Should not be Empty";
    status = false;
  }
  
  if(username == "")
  {
    errorMsg=  "username Should not be Empty";
    status = false;
  }
  
  if(location == "")
  {
    errorMsg=  `location Should not be Empty`;
    status = false;
  }
  
  if(tag == "")
  {
    errorMsg=  `tag Should not be Empty`;
    status = false;
  }
 
  
  let error = 
  {
    status :false,
    message: errorMsg
  };

if(status != true)
{
  callback(null, error);
  return;
}




  var apiResponse = {};
  var job_iD;
  var job_Name;
  var rtmp_url;
  var HlsoutUrl;
 

  
  context.callbackWaitsForEmptyEventLoop = false;
  
pool.getConnection(function(err, con) {    if (err) throw err;
  
    con.query("SELECT * FROM tbl_live_assets where title = '"+title+"'", function (err, resultt, fields) {
    if (err) throw err;
  console.log(resultt)
if(resultt.length > 0)
{
      var responsee={};
      responsee.status=false;
      responsee.message=title+ " Name already exist";
      callback(null, responsee);
    }
else
    {
  
   con.beginTransaction();
    con.query("SELECT * FROM tbl_job_details where status = 'free' limit 1 for update" , function (err, result, fields) {
    if (err) throw err;
    console.log(result.length);
    if(result.length == 0)
    {
      
      apiResponse.status=false;
      apiResponse.message="NO JOB FOUND";
      callback(null, apiResponse);
       
    }

else
    {
 
    
    job_iD= result[0].id;
    job_Name= result[0].jobNAME;
    rtmp_url = result[0].RTMPurl;
    HlsoutUrl = result[0].hlsOut;
    
        con.query("update tbl_job_details set status = 'used', currentUser =  '"+username+"' where id = '"+job_iD+"'" , function (err, result, fields) {
if (err) throw err;
con.commit();
});
     
    con.query("select * from tbl_live_transcoder" , function (err, results, fields){
      if (err) throw err;
      var user_name = results[0].username;
      var password = results[0].password;
      var IP = results[0].transcoderIp;
 
 
     
  
    
    var url = IP+"/users";
  const data={};
  data.user_name = user_name;
  data.password = password;
  
  axios.post(url, qs.stringify(data))
    .then((res) => {
      console.log(url);
      console.log(JSON.stringify(res.data));
        
        if(res.data["status"]=="success")
        {
          var cookieRes=res.headers['set-cookie'];
          var cookieArray=cookieRes.split(";");
          var sessionValArray=cookieArray[0].split("=");
          var phpSessionId=cookieArray[0];
    
        }
        else
        {
          apiResponse.status=false;
          apiResponse.messgae="Invalid Authorization";
          callback(null, apiResponse);
        }
        
    //     con.query("update tbl_job_details set status = 'used', currentUser =  '"+username+"' where transcoderID = '"+job_iD+"'" , function (err, result, fields) {

    // if (err) throw err;
        
let url1 = IP+"/jobs/job_get/"+job_Name;
           
                axios.get(url1, {headers:{"Cookie":phpSessionId}})
         
                .then((res2) =>{ 
                  
               
                  
                var response = res2.data.pfmt_job.job_status;
                var node = res2.data.pfmt_job.node_name;
                
                if(response != "running")
                {
                  let url2 = IP+"/jobs/job_start/"+job_Name+"?node_name="+node;
               
                    axios.get(url2, {headers:{"Cookie": phpSessionId}})
            
                    .then((res3) =>{ 
                            
                    con.query("update tbl_job_details set status = 'used', currentUser =  '"+username+"' where jobNAME = '"+job_Name+"'" , function (err, result, fields) {
if (err) throw err;
    if(result)
    {
        con.query("SELECT * FROM tbl_users_master where userId ='"+username+"'",function (err, result1, fields)
          {
            if (err) throw err;
            var user=result1[0].id;
            
            if(result1)
            {
        con.query("INSERT INTO tbl_live_assets(assetUrl, createdBy, title, description, isDRMRequired,orgId) VALUES('"+HlsoutUrl+"','"+user+"','"+title+"','"+location+"',1,'1')", function (err, result2, fields)
        {
                                  if (err) throw err;
                                  // console.log(username);
                                  //   console.log(result1);
                                   if (result2) {

          con.query("SELECT * FROM tbl_tags where tag='"+tag+"'",function (err,response,fields) {
 if (err) throw err;
            if (response.length > 0) 
            {

          con.query("SELECT * FROM tbl_tags where tag ='"+tag+"'",function (err,result4,fields) {

          if (err) throw err;

            var tagid =result4[0].id;

 

        if (result4)
        {                                               

          con.query("SELECT * FROM tbl_live_assets where title ='"+title+"'",function (err,result5,fields) {

          if (err)throw err;
          var assetid =result5[0].id;

 

          if (result5)
          {

        con.query("INSERT INTO tbl_tag_asset_association(assetId, tagId, categoryId, active,createdBy,updatedBy) VALUES('" +assetid+"','"+tagid+"','1','1','"+user+"','"+user+"')",function (err,result6,fields) {

        if (err)throw err;

        var apiResponse1 ={};
        apiResponse1.status = true;
          apiResponse1.rtmp_url =rtmp_url;
          apiResponse1.job_Name =job_Name;
            apiResponse1.HlsoutUrl =HlsoutUrl;

        callback(null,apiResponse1);
          });
          }
          });
          }
          });
          } 
          else
          
          {

          con.query("INSERT INTO tbl_tags(tag, active, createdBy) VALUES('"+tag+"','1','"+user+"')",function (err,result3,fields) {
    if (err) throw err;
    
if (result3) 
{
  con.query("SELECT * FROM tbl_tags where tag ='"+tag+"'",function (err,result4,fields) {
  if (err) throw err;
    var tagid =result4[0].id;
    
  if (result4)
  {
con.query("SELECT * FROM tbl_live_assets where title ='"+title+"'",function (err,result5,fields) {
    if (err) throw err;
var assetid =result5[0].id;

if (result5)
{
con.query("INSERT INTO tbl_tag_asset_association(assetId, tagId, categoryId, active,createdBy,updatedBy) VALUES('"+assetid+"','"+tagid+"','1','1','"+user+"','"+user+"')", function (err,result6,fields) {
  if (err) throw err;
  
var apiResponse1 ={};
        apiResponse1.status = true;
        apiResponse1.rtmp_url =rtmp_url;
        apiResponse1.job_Name =  job_Name;
  apiResponse1.HlsoutUrl = HlsoutUrl;
  apiResponse1.resultt = resultt;
callback(null,apiResponse1);
  });
  
            }
      });
      }
    });
      }
  });
  }
  });
              }
    });
}
    });
  }
});
                    });                             
    
                
                }
                else 
                {
                  let ress;
                  callback(null, "Job is already running");
                  callback(null,ress.data);
                }
              
                   
                  
                
                    
                
}).catch((error)=>{
  apiResponse.status=true;
        apiResponse.messgae="JOB DETAILS";
        apiResponse.data=error;
       
     
});

  con.release();
    
  });
  });
    
}


});


 

}
// else
//     {
//       var responsee={};
//       responsee.status=false;
//       responsee.message=title+ " Name already exist";
//       callback(null, responsee);
//     }
});
});
};

