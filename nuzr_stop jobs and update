const mysql = require('mysql');
const qs = require('qs');
const axios = require('axios');
const axios1 = require('axios');

const pool = mysql.createPool({
  connectionLimit : 10,
  host     : 'soapboxinternal.riversilica.com',
  user     : 'pixfixlocal',
  password : 'Pixfix@123',
  database : 'pixfix_test'
  
 
});

var job_Name;
var job_url;
var user_name;
var Password;

exports.handler = (event, context, callback) => {
    
 var url=event['url'];
 let errorMsg = {};
  let status = true;
  if(url == "")
  {
    errorMsg =  "url Should not be Empty";
    status = false;
  }
  let error = 
  {
    status :false,
    message: errorMsg
  };
  if(status != true)
{
  callback(null, error);
  return;
}


 context.callbackWaitsForEmptyEventLoop = false;
  pool.getConnection(function(err, con) {
    if (err) throw err;
    con.query("SELECT * FROM tbl_job_details where RTMPurl= '"+url+"'", function (err, result, fields) {
    if (err) throw err;
    console.log(result)
    
                     job_Name = result[0].jobNAME;
                    // console.log(result);
                  //  callback(null, job_Name);
                    
                    
 
  
 con.query("SELECT * FROM tbl_live_transcoder" , function (err, result2, fields) {
      if (err) throw err;
      user_name=result2[0].username;
      Password=result2[0].password;
      var IP = result2[0].transcoderIp;
                  
var url = IP+"/users";
  const data={
      user_name:user_name,
      password:Password
  };
  
  axios.post(url, qs.stringify(data))
    .then((res) => {
    //  console.log(url);
      //console.log(JSON.stringify(res.data));
        
        if(res.data["status"]=="success"){
          var cookieRes=res.headers['set-cookie'];
          var cookieArray=cookieRes.split(";");
          var sessionValArray=cookieArray[0].split("=");
          var phpSessionId=cookieArray[0];
          
          let url1 = IP+"/jobs/job_get/"+job_Name;
                        console.log(url1);
                       
                          axios1.get(url1, {headers:{"Cookie":phpSessionId}})
                     
                          .then((res1) =>{ 
                                var response = res1.data.pfmt_job.job_status;
                                
                              if(response !="running")
                            {
                                
                                      callback(null,"Job is not running"); 
                                        
                                }
                                else {
                                    let url2 = IP+"/jobs/job_stop/"+job_Name;
                                    axios1.post(url2,[], {headers:{"Cookie":phpSessionId}})
                                    
                                    .then((res2) =>{ 
                                         console.log("job stoped successfully");
                                        callback(null,"Job stopped successfully");
                                        
                                    })
                                    .catch((error) => {
                                      console.log("error while stopping job",JSON.stringify(error));
                                    
                                });
                                 con.query("update tbl_job_details set status = 'free', currentUser = 'null' where jobNAME = '"+job_Name+"'" , function (err, result, fields){
                                  if (err) throw err;
                                 });
                                 }
                                });
                                
                                
                          }
                       
                     });
 });
    });
                
                });
        };


